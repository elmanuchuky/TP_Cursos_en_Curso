/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Model.DatosGenerales;
import Model.GestorDatosGenerales;
import Model.GestorMatriculado;
import Model.GestorTipoDni;
import Model.Matriculado;
import Model.TipoDni;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Yasmin
 */
public class EditarMatriculado extends javax.swing.JFrame {

    GestorMatriculado gm;
    final JDialog dialog = new JDialog();
    int idDG = 0;

    /**
     * Creates new form EditarMatriculado
     *
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public EditarMatriculado() throws ClassNotFoundException, SQLException {
        initComponents();
        cargaCmb();
        cargarDiaCombo();
        gm = new GestorMatriculado();
        GestorTipoDni gtd = new GestorTipoDni();
        cargarComboTipoDni(gtd.obtenerTodos());
        this.setLocationRelativeTo(null);
        dialog.setAlwaysOnTop(true);
        soloNumero(txtLegajo);
        soloNumero(txtDocumento);
        soloNumero(txtTelefono);
        soloLetras(txtNombre);
        soloLetras(txtApellido);
        soloLetras(txtProfecion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtProfecion = new javax.swing.JTextField();
        cmbAnio = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cmbMes = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMail = new javax.swing.JTextField();
        cmbTipoDocumento = new javax.swing.JComboBox<>();
        txtDocumento = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbDia = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnMoificar = new javax.swing.JButton();
        cmdGo = new javax.swing.JButton();
        txtLegajo = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar Matriculado");
        setAlwaysOnTop(true);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(650, 280));
        setPreferredSize(new java.awt.Dimension(650, 280));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(10, 60, 67, 17);

        txtProfecion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtProfecion.setEnabled(false);
        getContentPane().add(txtProfecion);
        txtProfecion.setBounds(380, 173, 250, 30);

        cmbAnio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbAnio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2017" }));
        cmbAnio.setEnabled(false);
        cmbAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnioActionPerformed(evt);
            }
        });
        getContentPane().add(cmbAnio);
        cmbAnio.setBounds(420, 90, 80, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Fecha de Nacimiento");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(290, 100, 126, 17);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("E-Mail");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(10, 140, 50, 17);

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtNombre.setEnabled(false);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(90, 53, 190, 30);

        cmbMes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        cmbMes.setEnabled(false);
        cmbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesActionPerformed(evt);
            }
        });
        getContentPane().add(cmbMes);
        cmbMes.setBounds(510, 90, 50, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Profesión");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(310, 180, 56, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Documento");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 100, 73, 17);

        txtMail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMail.setEnabled(false);
        getContentPane().add(txtMail);
        txtMail.setBounds(90, 133, 540, 30);

        cmbTipoDocumento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbTipoDocumento.setEnabled(false);
        getContentPane().add(cmbTipoDocumento);
        cmbTipoDocumento.setBounds(90, 93, 69, 30);

        txtDocumento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDocumento.setEnabled(false);
        getContentPane().add(txtDocumento);
        txtDocumento.setBounds(160, 93, 123, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("/");
        getContentPane().add(jLabel12);
        jLabel12.setBounds(570, 100, 8, 17);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Apellido");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(310, 60, 58, 17);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Teléfono");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(10, 180, 52, 17);

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtTelefono.setEnabled(false);
        getContentPane().add(txtTelefono);
        txtTelefono.setBounds(90, 173, 200, 30);

        txtApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtApellido.setEnabled(false);
        getContentPane().add(txtApellido);
        txtApellido.setBounds(380, 53, 250, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("/");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(500, 100, 8, 17);

        cmbDia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1" }));
        cmbDia.setEnabled(false);
        getContentPane().add(cmbDia);
        cmbDia.setBounds(580, 90, 50, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Legajo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(220, 10, 61, 22);

        btnMoificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMoificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/arrow.png"))); // NOI18N
        btnMoificar.setText("Modificar");
        btnMoificar.setEnabled(false);
        btnMoificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnMoificar);
        btnMoificar.setBounds(520, 210, 105, 30);

        cmdGo.setText("BUSCAR");
        cmdGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGoActionPerformed(evt);
            }
        });
        getContentPane().add(cmdGo);
        cmdGo.setBounds(400, 10, 80, 30);

        txtLegajo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtLegajo.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtLegajoInputMethodTextChanged(evt);
            }
        });
        txtLegajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLegajoActionPerformed(evt);
            }
        });
        txtLegajo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                none(evt);
            }
        });
        getContentPane().add(txtLegajo);
        txtLegajo.setBounds(300, 10, 92, 28);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/textura-con-manchas-suaves-23827-2560x1600__wallpaper_480x300.jpg"))); // NOI18N
        jLabel15.setText("jLabel13");
        getContentPane().add(jLabel15);
        jLabel15.setBounds(480, 0, 480, 300);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/textura-con-manchas-suaves-23827-2560x1600__wallpaper_480x300.jpg"))); // NOI18N
        jLabel16.setText("jLabel13");
        getContentPane().add(jLabel16);
        jLabel16.setBounds(0, 0, 480, 300);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnioActionPerformed
        cargarDiaCombo();
    }//GEN-LAST:event_cmbAnioActionPerformed

    private void cmbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesActionPerformed
        cargarDiaCombo();
    }//GEN-LAST:event_cmbMesActionPerformed

    private void txtLegajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLegajoActionPerformed
        //proseso almacenado que filtar
    }//GEN-LAST:event_txtLegajoActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        MenuPrincipal.vEditarMatriculado = false;
    }//GEN-LAST:event_formWindowClosing

    private void btnMoificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoificarActionPerformed
        if (validacion()) {
            DatosGenerales d = new DatosGenerales();
            Matriculado m = new Matriculado();
            m.setIdMatriculado(idDG);
            d.setIdDatosGenerales(idDG);
            d.setNombre(txtNombre.getText());
            d.setApellido(txtApellido.getText());
            d.setTipoDni(((TipoDni) cmbTipoDocumento.getSelectedItem()).getId());
            d.setDni(Integer.parseInt(txtDocumento.getText()));
            String fecha = cmbAnio.getSelectedItem().toString() + "/" + cmbMes.getSelectedItem().toString() + "/" + cmbDia.getSelectedItem().toString();
            d.setFechaNacimiento(fecha);
            d.setTelefono(txtTelefono.getText());
            d.setEmail(txtMail.getText());
            m.setProfesion(txtProfecion.getText());
            m.setLegajoMatriculado(Integer.parseInt(txtLegajo.getText()));

            try {
                gm.modificarMatriculado(m, d);
                JOptionPane.showMessageDialog(dialog, "Se ha modificado con éxito el registro");
                limpiarControles();
            } catch (SQLException ex) {
                Logger.getLogger(RegistrarMatriculado.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegistrarMatriculado.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMoificarActionPerformed

    private void none(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_none
        // TODO add your handling code here:

    }//GEN-LAST:event_none

    private void txtLegajoInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtLegajoInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_txtLegajoInputMethodTextChanged

    private void cmdGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGoActionPerformed
        // TODO add your handling code here:
        GestorMatriculado gm = new GestorMatriculado();
        GestorDatosGenerales gdg = new GestorDatosGenerales();
        try {
            idDG = gm.obtenerMatriculado(Integer.parseInt(txtLegajo.getText()));
            gm = new GestorMatriculado();
            Matriculado m = gm.obtenerMatriculadoxLegajo(Integer.parseInt(txtLegajo.getText()));
            m.setIdMatriculado(idDG);
            if (idDG != 0) {
                habilitar(true);
                gdg = new GestorDatosGenerales();
                cargarControles(gdg.obtenerDatosGenerales(idDG), m);
            } else {
                habilitar(false);
                limpiarControles();
                JOptionPane.showMessageDialog(dialog, "No se ha encontrado ningun Matriculado");
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditarMatriculado.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmdGoActionPerformed

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/IconoDefinitivo.jpg"));
        return retValue;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarMatriculado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarMatriculado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarMatriculado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarMatriculado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new EditarMatriculado().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(EditarMatriculado.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(EditarMatriculado.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void cargaCmb() {
        DefaultComboBoxModel modelAnio = new DefaultComboBoxModel();
        DefaultComboBoxModel modelMes = new DefaultComboBoxModel();

        int anio = 1900;
        int mes = 1;

        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);

        while (anio <= year) {
            modelAnio.addElement(anio);
            anio++;
        }
        cmbAnio.setModel(modelAnio);

        while (mes <= 12) {
            modelMes.addElement(mes);
            mes++;
        }
        cmbMes.setModel(modelMes);

    }

    private void cargarDiaCombo() {
        DefaultComboBoxModel modelDia = new DefaultComboBoxModel();
        int dia = 1;
        int mes = cmbMes.getSelectedIndex() + 1;

        while (dia <= 28) {
            modelDia.addElement(dia);
            dia++;
        }

        if (mes == 2) {
            if ((int) cmbAnio.getSelectedItem() % 4 == 0 && ((int) cmbAnio.getSelectedItem() % 100 != 0 || (int) cmbAnio.getSelectedItem() % 400 == 0)) {
                modelDia.addElement(dia);
            }
        } else if (mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12) {
            while (dia <= 31) {
                modelDia.addElement(dia);
                dia++;
            }
        } else {
            while (dia <= 30) {
                modelDia.addElement(dia);
                dia++;
            }
        }
        cmbDia.setModel(modelDia);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMoificar;
    private javax.swing.JComboBox cmbAnio;
    private javax.swing.JComboBox cmbDia;
    private javax.swing.JComboBox cmbMes;
    private javax.swing.JComboBox<String> cmbTipoDocumento;
    private javax.swing.JButton cmdGo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtLegajo;
    private javax.swing.JTextField txtMail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtProfecion;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private boolean validacion() {
        try {
            Integer.parseInt(txtDocumento.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(dialog, "El documento debe ser un número", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtNombre.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "El campo nombre no debe estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtApellido.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "El campo apellido no debe estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtMail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "El campo e-mail no debe estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtTelefono.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "El campo teléfono no debe estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (txtProfecion.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "El campo profesión no debe estar vacío", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (cmbTipoDocumento.getSelectedIndex() == -1) {
            return false;
        }
        if (cmbDia.getSelectedIndex() == -1) {
            return false;
        }
        if (cmbMes.getSelectedIndex() == -1) {
            return false;
        }
        if (cmbAnio.getSelectedIndex() == -1) {
            return false;
        }
        return true;
    }

    private void cargarComboTipoDni(ArrayList<TipoDni> obtenerTodos) {
        DefaultComboBoxModel model = new DefaultComboBoxModel();

        for (Object elemento : obtenerTodos) {
            model.addElement(elemento);
        }

        cmbTipoDocumento.setModel(model);
    }

    private void habilitar(boolean b) {
        txtNombre.setEnabled(b);
        txtApellido.setEnabled(b);
        txtDocumento.setEnabled(b);
        txtMail.setEnabled(b);
        txtTelefono.setEnabled(b);
        txtProfecion.setEnabled(b);
        cmbTipoDocumento.setEnabled(b);
        cmbDia.setEnabled(b);
        cmbMes.setEnabled(b);
        cmbAnio.setEnabled(b);
        btnMoificar.setEnabled(b);
    }

    private void cargarControles(DatosGenerales dg, Matriculado m) {
        txtApellido.setText(dg.getApellido());
        txtDocumento.setText("" + dg.getDni());
        txtMail.setText(dg.getEmail());
        txtNombre.setText(dg.getNombre());
        txtTelefono.setText(dg.getTelefono());
        cmbTipoDocumento.setSelectedIndex(0);
        txtProfecion.setText(m.getProfesion());

        String[] datosFecha = dg.getFechaNacimiento().split("-");

        cmbAnio.setSelectedIndex(((Integer.parseInt(datosFecha[0])) - 1900));
        cmbMes.setSelectedIndex(Integer.parseInt(datosFecha[1]) - 1);
        cmbDia.setSelectedIndex(Integer.parseInt(datosFecha[2]) - 1);

    }

    private void limpiarControles() {
        txtLegajo.setText("");
        txtApellido.setText("");
        txtDocumento.setText("");
        txtMail.setText("");
        txtNombre.setText("");
        txtTelefono.setText("");
        txtProfecion.setText("");
        cmbTipoDocumento.setSelectedIndex(-1);
        cmbAnio.setSelectedIndex(0);
        cmbMes.setSelectedIndex(0);
        cmbDia.setSelectedIndex(0);
    }
    
    public void soloNumero(JTextField a) {
        a.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isLetter(c)) {
                    getToolkit().beep();
                    e.consume();
                }
            }
        });
    }
    
    public void soloLetras(JTextField a) {
        a.addKeyListener(new KeyAdapter() {
            public void keyTyped(KeyEvent e) {
                char c = e.getKeyChar();
                if (Character.isDigit(c)) {
                    getToolkit().beep();
                    e.consume();
                }
            }
        });
    }
}
